server.port=${SERVER_PORT:8081}
spring.kafka2.bootstrap-servers=${BOOTSTRAP_SERVER_URL_KAFKA2}
spring.kafka3.bootstrap-servers=${BOOTSTRAP_SERVER_URL_KAFKA3}
consumer.topic=${STREAM_COMPANY_OFFICERS_TOPIC:stream-company-officers}
consumer.officer-merge-topic=${OFFICER_MERGE_TOPIC_TOPIC:officer-merge}
consumer.group_id=${GROUP_ID:officers-search-consumer}
consumer.max_attempts=${MAX_ATTEMPTS:5}
consumer.backoff_delay=${BACKOFF_DELAY:1000}
consumer.concurrency=${CONCURRENT_LISTENER_INSTANCES:1}
invalid_message_topic=${STREAM_COMPANY_OFFICERS_INVALID_MESSAGE_TOPIC:stream-company-officers-officers-search-consumer-invalid}
officer_merge_invalid_message_topic=${OFFICER_MERGE_INVALID_MESSAGE_TOPIC:officer-merge-officers-search-consumer-invalid}
logger.namespace=officers-search-consumer
management.endpoints.enabled-by-default=false
management.endpoints.web.base-path=/officers-search-consumer
management.endpoints.web.path-mapping.health=healthcheck
management.endpoint.health.show-details=never
management.endpoint.health.enabled=true
api.api-url=${API_URL:localhost}
api.api-key=${CHS_API_KEY:chsApiKey}